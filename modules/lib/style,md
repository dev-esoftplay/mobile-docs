# LibStyle

This module provides a centralized place to store and manage your application's styles, colors, dimensions, and platform-specific configurations. It exports a `Style` class with static properties and methods for accessing these values.

## Usage

```javascript
import { LibStyle } from 'esoftplay/cache/lib/style/import';

// Accessing colors:
console.log(LibStyle.colorPrimary);
console.log(LibStyle.colorAccent);

// Accessing dimensions:
console.log(LibStyle.width);
console.log(LibStyle.height);

// Accessing platform-specific configurations:
console.log(LibStyle.isIphoneX);
console.log(LibStyle.STATUSBAR_HEIGHT);

// Using elevation:
const shadowStyle = LibStyle.elevation(4);

// Using default styles:
const styles = StyleSheet.create({
  container: {
    ...LibStyle.defaultStyle.container,
    backgroundColor: 'white', // Override or add styles
  },
  image: {
    ...LibStyle.defaultStyle.imageSliderSize,
  },
});
```

## API

### `Style` Class (Static Properties and Methods)

*   `isIphoneX: boolean`:  A boolean indicating whether the device is an iPhone X or newer model.
*   `STATUSBAR_HEIGHT: number`: The height of the status bar, adjusted for the platform and iPhone X models.
*   `STATUSBAR_HEIGHT_MASTER: number`:  Same as `STATUSBAR_HEIGHT`.  (It appears this is a duplicate and could be removed).
*   `colorPrimary: string`: Primary color of the application.
*   `colorPrimaryDark: string`: A darker shade of the primary color.
*   `colorPrimaryMarket: string`: A specific primary color (possibly for a "Market" section).
*   `colorPrimaryMart: string`: Another specific primary color (possibly for a "Mart" section).
*   `colorAccent: string`: Accent color of the application.
*   `colorGrey: string`: A light gray color.
*   `colorBrownLight: string`: A lighter shade of brown.
*   `colorBgGrey: string`: A background grey color.
*   `colorBrown: string`: A brown color.
*   `colorGreen: string`: A green color.
*   `colorBlue: string`: A blue color.
*   `colorRed: string`: A red color.
*   `colorTextPrimary: string`: Color for primary text.
*   `colorTextBody: string`: Color for body text.
*   `colorTextCaption: string`: Color for caption text.
*   `colorLightGrey: string`: A lighter shade of gray.
*   `elevation(val: number): any`: A function that returns platform-specific styles for elevation (shadow on iOS, elevation on Android).
*   `width: number`: The width of the device screen.
*   `height: number`: The height of the device screen.
*   `defaultStyle: any`: An object containing default styles for common components.
*   `headerHeight: number`:  The default height of a header.

## Functionality

1. **Platform Detection:** The `isIphoneX` function determines if the device is an iPhone X or newer model.

2. **Status Bar Height:** The `STATUSBAR_HEIGHT` and `STATUSBAR_HEIGHT_MASTER` constants store the appropriate status bar height based on the platform and iPhone X status.

3. **Color Palette:** The module defines a set of color constants for consistent styling throughout the application.

4. **Dimensions:** The `width` and `height` constants store the device's screen dimensions.

5. **Elevation:** The `elevation` function provides platform-specific styles for shadows (iOS) and elevation (Android).

6. **Default Styles:** The `defaultStyle` object contains pre-defined styles for common components, promoting consistency and reducing code duplication.

## Important Considerations

*   **Centralized Styling:** This module promotes centralized style management, making it easier to update and maintain your application's styles.
*   **Platform Awareness:** The module handles platform differences (especially for status bar height and elevation) to ensure consistent behavior across iOS and Android.
*   **Default Styles:** The `defaultStyle` object provides a good starting point for styling your components. You can extend or override these styles as needed.
*   **Consistency:** Using this module helps maintain consistency in your app's design and styling.
*   **Customization:** You can easily add more colors, dimensions, or default styles to this module as your application grows.
* **Maintainability:**  By centralizing your styles, it becomes much easier to update your app's theme or make global style changes.  You don't have to hunt down styles scattered throughout your components.
* **Naming Conventions:** The naming conventions used for the color constants (e.g., `colorPrimary`, `colorAccent`) are common and help to make your code more readable.
* **Units:**  The dimensions (`width`, `height`) are typically in points (or pixels, depending on the platform's scaling).  Be mindful of units when using these values in your styles.
* **Scalability:** This approach to style management is highly scalable.  As your app grows, you can easily add more styles and configurations to this module.
* **Duplication:** It appears that `STATUSBAR_HEIGHT` and `STATUSBAR_HEIGHT_MASTER` are duplicates.  You likely only need one of these.  Remove the duplicate to avoid confusion.
